package com.sportify.ReservationMicroService.service;

import com.sportify.ReservationMicroService.entity.AppUser;
import com.sportify.ReservationMicroService.security.AccessTokenGetter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.sportify.ReservationMicroService.entity.Reservation;
import com.sportify.ReservationMicroService.entity.Terrain;
import com.sportify.ReservationMicroService.feignclient.JoueurClient;
import com.sportify.ReservationMicroService.feignclient.TerrainClient;
import com.sportify.ReservationMicroService.repository.ReservationRepository;



@Service
@Transactional
public class ReservationService {
	@Autowired
    private ReservationRepository orderRepository;
	@Autowired
	TerrainClient tClient;
	@Autowired 
	JoueurClient jclient;



    public Reservation saveReservation(Long seanceId, Long id) {
    	AppUser user = jclient.profile(AccessTokenGetter.getBearerTokenHeader());
		 Terrain terrain = tClient.findTerrainById(id, AccessTokenGetter.getBearerTokenHeader());
		 Reservation res1 = findByTerrainByDate(seanceId,id);	
		 if(res1 == null) {
		  		
	  		 Reservation res = new Reservation();
	  			res.setUser(user);
	  			res.setUserId(user.getId());
	  			res.setTerrainId(id);
	  			res.setTerrain(terrain);
	  			Seance s = tClient.findSeanceById(seanceId,AccessTokenGetter.getBearerTokenHeader());
	  			s.setNbreParticipant(1);
	  			res.setSeance(s);
	  			res.setSeanceId(seanceId);
	  			List<String> us = res.getJoueurs();
	  			if(us == null) {
	  				us = new ArrayList<String>() ;
	  			}
	  			us.add(user.getUsername());
	  			res.setJoueurs(us);
	  			
	          return orderRepository.save(res);
	   	}
	   	List<String> us = res1.getJoueurs();
			us.add(user.getUsername());
			res1.setJoueurs(us);
			Seance s = tClient.findSeanceById(seanceId,AccessTokenGetter.getBearerTokenHeader());
			s.setNbreParticipant(s.getNbreParticipant()+1);
			if(s.getNbreParticipant() == 10) {
				s.setDisponibilite(false);
			}
			res1.setSeance(s);
			return orderRepository.save(res1);
    }

    
    public Reservation findById(int id) {
        return orderRepository.findById(id);
    }
    
    public Reservation findReservationUser(int id) {
    	 	Reservation r = this.findById(id);
			AppUser user = jclient.profile(AccessTokenGetter.getBearerTokenHeader());
			Terrain terrain = tClient.findTerrainById(r.getTerrainId(),AccessTokenGetter.getBearerTokenHeader());
			r.setTerrain(terrain);
			r.setUser(user);
        return r;
    }

}
